/* 
 * Bank Feeds API
 *
 * This specifing endpoints Xero Bank feeds API
 *
 * The version of the OpenAPI document: 2.6.1
 * Contact: api@xero.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Xero.NetStandard.OAuth2.Api;
using Xero.NetStandard.OAuth2.Model.Bankfeeds;
using Xero.NetStandard.OAuth2.Client;
using System.Reflection;
using Newtonsoft.Json;
using RestSharp;

namespace Xero.NetStandard.OAuth2.Test.Model.Bankfeeds
{
    /// <summary>
    ///  Class for testing StartBalance
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class StartBalanceTests : IDisposable
    {
        public StartBalanceTests()
        {
            // TODO uncomment below to create an instance of StartBalance
            //instance = new StartBalance();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test the property 'Amount' deserialises from valid decimal numbers
        /// </summary>
        [Theory]
        [InlineData("20.00")]
        [InlineData("20")]
        public void Amount_GivenValidInputs_Deserialises(string input)
        {
            var response = new RestResponse();
            response.Content = $@"{{
                ""Amount"": {input}
            }}";

            var deserializer = new CustomJsonCodec(new Configuration());
            var actual = deserializer.Deserialize<EndBalance>(response);

            Assert.Equal(20, (int)actual.Amount);
        }
        /// <summary>
        /// Test the property 'CreditDebitIndicator' deserialises to 0 when not present
        /// </summary>
        [Fact]
        public void CreditDebitIndicator_NotPresent_DeserialisesTo0()
        {
            var response = new RestResponse();
            response.Content = "{}";

            var deserializer = new CustomJsonCodec(new Configuration());
            var actual = deserializer.Deserialize<EndBalance>(response);

            Assert.Equal(0, (int)actual.CreditDebitIndicator);
        }
    }
}
