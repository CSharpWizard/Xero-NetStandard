/* 
 * Accounting API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@xero.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Xero.NetStandard.OAuth2.Api;
using Xero.NetStandard.OAuth2.Model;
using Xero.NetStandard.OAuth2.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Xero.NetStandard.OAuth2.Test
{
    /// <summary>
    ///  Class for testing BankTransfer
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class BankTransferTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for BankTransfer
        //private BankTransfer instance;

        public BankTransferTests()
        {
            // TODO uncomment below to create an instance of BankTransfer
            //instance = new BankTransfer();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BankTransfer
        /// </summary>
        [Fact]
        public void BankTransferInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" BankTransfer
            //Assert.IsInstanceOfType<BankTransfer> (instance, "variable 'instance' is a BankTransfer");
        }


        /// <summary>
        /// Test the property 'FromBankAccount'
        /// </summary>
        [Fact]
        public void FromBankAccountTest()
        {
            // TODO unit test for the property 'FromBankAccount'
        }
        /// <summary>
        /// Test the property 'ToBankAccount'
        /// </summary>
        [Fact]
        public void ToBankAccountTest()
        {
            // TODO unit test for the property 'ToBankAccount'
        }
        /// <summary>
        /// Test the property 'Amount'
        /// </summary>
        [Fact]
        public void AmountTest()
        {
            // TODO unit test for the property 'Amount'
        }
        /// <summary>
        /// Test the property 'Date'
        /// </summary>
        [Fact]
        public void DateTest()
        {
            // TODO unit test for the property 'Date'
        }
        /// <summary>
        /// Test the property 'BankTransferID'
        /// </summary>
        [Fact]
        public void BankTransferIDTest()
        {
            // TODO unit test for the property 'BankTransferID'
        }
        /// <summary>
        /// Test the property 'CurrencyRate'
        /// </summary>
        [Fact]
        public void CurrencyRateTest()
        {
            // TODO unit test for the property 'CurrencyRate'
        }
        /// <summary>
        /// Test the property 'FromBankTransactionID'
        /// </summary>
        [Fact]
        public void FromBankTransactionIDTest()
        {
            // TODO unit test for the property 'FromBankTransactionID'
        }
        /// <summary>
        /// Test the property 'ToBankTransactionID'
        /// </summary>
        [Fact]
        public void ToBankTransactionIDTest()
        {
            // TODO unit test for the property 'ToBankTransactionID'
        }
        /// <summary>
        /// Test the property 'HasAttachments'
        /// </summary>
        [Fact]
        public void HasAttachmentsTest()
        {
            // TODO unit test for the property 'HasAttachments'
        }
        /// <summary>
        /// Test the property 'CreatedDateUTC'
        /// </summary>
        [Fact]
        public void CreatedDateUTCTest()
        {
            // TODO unit test for the property 'CreatedDateUTC'
        }
        /// <summary>
        /// Test the property 'ValidationErrors'
        /// </summary>
        [Fact]
        public void ValidationErrorsTest()
        {
            // TODO unit test for the property 'ValidationErrors'
        }

    }

}
