/* 
 * Xero Payroll AU
 *
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.8.0
 * Contact: api@xero.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Xero.NetStandard.OAuth2.Api;
using Xero.NetStandard.OAuth2.Model.PayrollAu;
using Xero.NetStandard.OAuth2.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Xero.NetStandard.OAuth2.Test.Model.PayrollAu
{
    /// <summary>
    ///  Class for testing EarningsRate
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EarningsRateTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for EarningsRate
        //private EarningsRate instance;

        public EarningsRateTests()
        {
            // TODO uncomment below to create an instance of EarningsRate
            //instance = new EarningsRate();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EarningsRate
        /// </summary>
        [Fact]
        public void EarningsRateInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" EarningsRate
            //Assert.IsInstanceOfType<EarningsRate> (instance, "variable 'instance' is a EarningsRate");
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'AccountCode'
        /// </summary>
        [Fact]
        public void AccountCodeTest()
        {
            // TODO unit test for the property 'AccountCode'
        }
        /// <summary>
        /// Test the property 'TypeOfUnits'
        /// </summary>
        [Fact]
        public void TypeOfUnitsTest()
        {
            // TODO unit test for the property 'TypeOfUnits'
        }
        /// <summary>
        /// Test the property 'IsExemptFromTax'
        /// </summary>
        [Fact]
        public void IsExemptFromTaxTest()
        {
            // TODO unit test for the property 'IsExemptFromTax'
        }
        /// <summary>
        /// Test the property 'IsExemptFromSuper'
        /// </summary>
        [Fact]
        public void IsExemptFromSuperTest()
        {
            // TODO unit test for the property 'IsExemptFromSuper'
        }
        /// <summary>
        /// Test the property 'IsReportableAsW1'
        /// </summary>
        [Fact]
        public void IsReportableAsW1Test()
        {
            // TODO unit test for the property 'IsReportableAsW1'
        }
        /// <summary>
        /// Test the property 'EarningsType'
        /// </summary>
        [Fact]
        public void EarningsTypeTest()
        {
            // TODO unit test for the property 'EarningsType'
        }
        /// <summary>
        /// Test the property 'EarningsRateID'
        /// </summary>
        [Fact]
        public void EarningsRateIDTest()
        {
            // TODO unit test for the property 'EarningsRateID'
        }
        /// <summary>
        /// Test the property 'RateType'
        /// </summary>
        [Fact]
        public void RateTypeTest()
        {
            // TODO unit test for the property 'RateType'
        }
        /// <summary>
        /// Test the property 'RatePerUnit'
        /// </summary>
        [Fact]
        public void RatePerUnitTest()
        {
            // TODO unit test for the property 'RatePerUnit'
        }
        /// <summary>
        /// Test the property 'Multiplier'
        /// </summary>
        [Fact]
        public void MultiplierTest()
        {
            // TODO unit test for the property 'Multiplier'
        }
        /// <summary>
        /// Test the property 'AccrueLeave'
        /// </summary>
        [Fact]
        public void AccrueLeaveTest()
        {
            // TODO unit test for the property 'AccrueLeave'
        }
        /// <summary>
        /// Test the property 'Amount'
        /// </summary>
        [Fact]
        public void AmountTest()
        {
            // TODO unit test for the property 'Amount'
        }
        /// <summary>
        /// Test the property 'EmploymentTerminationPaymentType'
        /// </summary>
        [Fact]
        public void EmploymentTerminationPaymentTypeTest()
        {
            // TODO unit test for the property 'EmploymentTerminationPaymentType'
        }
        /// <summary>
        /// Test the property 'UpdatedDateUTC'
        /// </summary>
        [Fact]
        public void UpdatedDateUTCTest()
        {
            // TODO unit test for the property 'UpdatedDateUTC'
        }
        /// <summary>
        /// Test the property 'CurrentRecord'
        /// </summary>
        [Fact]
        public void CurrentRecordTest()
        {
            // TODO unit test for the property 'CurrentRecord'
        }
        /// <summary>
        /// Test the property 'AllowanceType'
        /// </summary>
        [Fact]
        public void AllowanceTypeTest()
        {
            // TODO unit test for the property 'AllowanceType'
        }

    }

}
