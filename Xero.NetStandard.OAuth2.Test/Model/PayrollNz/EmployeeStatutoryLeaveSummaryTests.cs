/* 
 * Xero Payroll NZ
 *
 * This is the Xero Payroll API for orgs in the NZ region.
 *
 * The version of the OpenAPI document: 2.7.0
 * Contact: api@xero.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Xero.NetStandard.OAuth2.Api;
using Xero.NetStandard.OAuth2.Model.PayrollNz;
using Xero.NetStandard.OAuth2.Client;
using System.Reflection;
using Newtonsoft.Json;
using RestSharp;

namespace Xero.NetStandard.OAuth2.Test.Model.PayrollNz
{
    /// <summary>
    ///  Class for testing EmployeeStatutoryLeaveSummary
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EmployeeStatutoryLeaveSummaryTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for EmployeeStatutoryLeaveSummary
        //private EmployeeStatutoryLeaveSummary instance;

        public EmployeeStatutoryLeaveSummaryTests()
        {
            // TODO uncomment below to create an instance of EmployeeStatutoryLeaveSummary
            //instance = new EmployeeStatutoryLeaveSummary();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EmployeeStatutoryLeaveSummary
        /// </summary>
        [Fact]
        public void EmployeeStatutoryLeaveSummaryInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" EmployeeStatutoryLeaveSummary
            //Assert.IsInstanceOfType<EmployeeStatutoryLeaveSummary> (instance, "variable 'instance' is a EmployeeStatutoryLeaveSummary");
        }


        /// <summary>
        /// Test the property 'StatutoryLeaveID'
        /// </summary>
        [Fact]
        public void StatutoryLeaveIDTest()
        {
            // TODO unit test for the property 'StatutoryLeaveID'
        }
        /// <summary>
        /// Test the property 'EmployeeID'
        /// </summary>
        [Fact]
        public void EmployeeIDTest()
        {
            // TODO unit test for the property 'EmployeeID'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Theory]
        [InlineData("Adoption", EmployeeStatutoryLeaveSummary.TypeEnum.Adoption)]
        [InlineData("Maternity", EmployeeStatutoryLeaveSummary.TypeEnum.Maternity)]
        [InlineData("Paternity", EmployeeStatutoryLeaveSummary.TypeEnum.Paternity)]
        [InlineData("Sharedparental", EmployeeStatutoryLeaveSummary.TypeEnum.Sharedparental)]
        [InlineData("Sick", EmployeeStatutoryLeaveSummary.TypeEnum.Sick)]
        public void TypeEnum_ValidInput_Deserialises(string input, EmployeeStatutoryLeaveSummary.TypeEnum expected)
        {
            var response = new RestResponse();
            response.Content = $@"""{input}""";

            var deserializer = new CustomJsonCodec(new Configuration());
            var actual = deserializer.Deserialize<EmployeeStatutoryLeaveSummary.TypeEnum>(response);

            Assert.Equal(expected, actual);
        }

        [Fact]
        public void TypeEnum_NullInput_Deserialises(){
            var response = new RestResponse();
            response.Content = "null";

            var deserializer = new CustomJsonCodec(new Configuration());
            var actual = deserializer.Deserialize<EmployeeStatutoryLeaveSummary.TypeEnum>(response);

            Assert.Equal(0, (int)actual);
        }
        /// <summary>
        /// Test the property 'StartDate'
        /// </summary>
        [Fact]
        public void StartDateTest()
        {
            // TODO unit test for the property 'StartDate'
        }
        /// <summary>
        /// Test the property 'EndDate'
        /// </summary>
        [Fact]
        public void EndDateTest()
        {
            // TODO unit test for the property 'EndDate'
        }
        /// <summary>
        /// Test the property 'IsEntitled'
        /// </summary>
        [Fact]
        public void IsEntitledTest()
        {
            // TODO unit test for the property 'IsEntitled'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Theory]
        [InlineData("Completed", EmployeeStatutoryLeaveSummary.StatusEnum.Completed)]
        [InlineData("InProgress", EmployeeStatutoryLeaveSummary.StatusEnum.InProgress)]
        [InlineData("Pending", EmployeeStatutoryLeaveSummary.StatusEnum.Pending)]
        public void StatusEnum_ValidInput_Deserialises(string input, EmployeeStatutoryLeaveSummary.StatusEnum expected)
        {
            var response = new RestResponse();
            response.Content = $@"""{input}""";

            var deserializer = new CustomJsonCodec(new Configuration());
            var actual = deserializer.Deserialize<EmployeeStatutoryLeaveSummary.StatusEnum>(response);

            Assert.Equal(expected, actual);
        }

        [Fact]
        public void StatusEnum_NullInput_Deserialises(){
            var response = new RestResponse();
            response.Content = "null";

            var deserializer = new CustomJsonCodec(new Configuration());
            var actual = deserializer.Deserialize<EmployeeStatutoryLeaveSummary.StatusEnum>(response);

            Assert.Equal(0, (int)actual);
        }

    }

}
