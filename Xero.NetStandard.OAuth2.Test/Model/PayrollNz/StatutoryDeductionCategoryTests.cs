/* 
 * Xero Payroll NZ
 *
 * This is the Xero Payroll API for orgs in the NZ region.
 *
 * The version of the OpenAPI document: 2.7.0
 * Contact: api@xero.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Xero.NetStandard.OAuth2.Api;
using Xero.NetStandard.OAuth2.Model.PayrollNz;
using Xero.NetStandard.OAuth2.Client;
using System.Reflection;
using Newtonsoft.Json;
using RestSharp;

namespace Xero.NetStandard.OAuth2.Test.Model.PayrollNz
{
    /// <summary>
    ///  Class for testing StatutoryDeductionCategory
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class StatutoryDeductionCategoryTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for StatutoryDeductionCategory
        //private StatutoryDeductionCategory instance;

        public StatutoryDeductionCategoryTests()
        {
            // TODO uncomment below to create an instance of StatutoryDeductionCategory
            //instance = new StatutoryDeductionCategory();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of StatutoryDeductionCategory
        /// </summary>
        [Theory]
        [InlineData("AdditionalStudentLoan", StatutoryDeductionCategory.AdditionalStudentLoan)]
        [InlineData("ChildSupport", StatutoryDeductionCategory.ChildSupport)]
        [InlineData("CourtFines", StatutoryDeductionCategory.CourtFines)]
        [InlineData("InlandRevenueArrears", StatutoryDeductionCategory.InlandRevenueArrears)]
        [InlineData("KiwiSaver", StatutoryDeductionCategory.KiwiSaver)]
        [InlineData("MsdRepayments", StatutoryDeductionCategory.MsdRepayments)]
        [InlineData("NonPriorityOrder", StatutoryDeductionCategory.NonPriorityOrder)]
        [InlineData("PriorityOrder", StatutoryDeductionCategory.PriorityOrder)]
        [InlineData("StudentLoan", StatutoryDeductionCategory.StudentLoan)]
        [InlineData("TableBased", StatutoryDeductionCategory.TableBased)]
        [InlineData("VoluntaryStudentLoan", StatutoryDeductionCategory.VoluntaryStudentLoan)]
        public void StatutoryDeductionCategory_ValidInput_Deserialises(string input, StatutoryDeductionCategory expected)
        {
            var response = new RestResponse();
            response.Content = $@"""{input}""";

            var deserializer = new CustomJsonCodec(new Configuration());
            var actual = deserializer.Deserialize<StatutoryDeductionCategory>(response);

            Assert.Equal(expected, actual);
        }

        [Fact]
        public void StatutoryDeductionCategory_NullInput_Deserialises(){
            var response = new RestResponse();
            response.Content = "null";

            var deserializer = new CustomJsonCodec(new Configuration());
            var actual = deserializer.Deserialize<StatutoryDeductionCategory>(response);

            Assert.Equal(0, (int)actual);
        }



    }

}
